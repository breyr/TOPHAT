generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["strictUndefinedChecks"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DeviceType {
  LAB
  INTERCONNECT
}

enum IconType {
  ROUTER
  SWITCH
  EXTERNAL
  SERVER
}

enum AccountType {
  USER
  ADMIN
}

model AppUser {
  id          Int         @id @default(autoincrement())
  username    String      @db.VarChar
  email       String      @unique @db.VarChar
  password    String      @db.VarChar
  accountType AccountType
  createdAt   DateTime    @db.Timestamp(6)
  updatedAt   DateTime    @db.Timestamp(6)

  topologies Topology[]
}

model Topology {
  id             Int      @id @default(autoincrement())
  userId         Int
  name           String   @db.VarChar
  thumbnail      Bytes
  reactFlowState Json
  expiresOn      DateTime @db.Timestamp(6)
  archived       Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // many-to-one (many topologies to one user)
  user AppUser @relation(fields: [userId], references: [id])
}

model Device {
  id             Int        @id @default(autoincrement())
  userId         Int? // "FK" to user, just used for tracking purposes 
  topologyId     Int? // "FK" to topology, just used for tracking purposes
  name           String     @db.Text
  model          String     @db.Text
  serialNumber   String     @db.Text
  ipAddress      String?    @db.VarChar(32)
  description    String?    @db.Text
  password       String?    @db.Text
  username       String?    @db.Text
  secretPassword String?    @db.Text
  ports          String     @db.Text
  type           DeviceType
  icon           IconType?
}

model Connection {
  id                     Int    @id @default(autoincrement())
  labDeviceName          String @db.Text
  labDevicePort          String @db.Text
  interconnectDeviceName String @db.Text
  interconnectDevicePort String @db.Text
}
